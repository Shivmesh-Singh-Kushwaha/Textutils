{"version":3,"sources":["component/Navbar.js","component/TextForm.js","component/Alert.js","App.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlfor","TextForm","useState","Text","setText","style","color","heading","value","backgroundColor","onChange","event","target","rows","newText","toUpperCase","showAlert","toLowerCase","text","document","getElementById","select","navigator","clipboard","writeText","split","join","length","Alert","alert","class","role","word","lower","charAt","slice","capitalize","msg","App","setmode","setalert","message","setTimeout","body","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a4f8d40f.chunk.js","sourcesContent":["import React from 'react'\r\nimport { a } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <>\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n          <div className=\"container-fluid\">\r\n            <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n              <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                <li className=\"nav-item\">\r\n                  <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n                </li>\r\n                {/* <li className=\"nav-item\">\r\n                   <a className=\"nav-link\" href=\"/about\">About</a>\r\n               </li> */}\r\n                {/* <li className=\"nav-item dropdown\">\r\n                   <a className=\"nav-link dropdown-toggle\" href=\"/\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                    Dropdown\r\n                  </a>\r\n              <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                  <li><a className=\"dropdown-item\" href=\"/\">Action</a></li>\r\n                  <li><a className=\"dropdown-item\" href=\"/\">Another action</a></li>\r\n                  <li><hr className=\"dropdown-divider\"/></li>\r\n                  <li><a className=\"dropdown-item\" href=\"/\">Something else here</a></li>\r\n              </ul>\r\n            </li> */}\r\n          </ul>\r\n      {/* <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form> */}\r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n        <label className=\"form-check-label\" htmlfor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n        </>\r\n    )\r\n}\r\n","import React,{useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    \r\n    const handleUpClick = () => {\r\n        // console.log(\"Uppercase was Clicked \" + Text);\r\n        let newText = Text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Upper Case\",\"success\");\r\n    }\r\n    const handleLoClick = () => {\r\n        // console.log(\"Uppercase was Clicked \" + Text);\r\n        let newText = Text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Lower Case\",\"success\");\r\n    }\r\n    const handleClearClick = () => {\r\n        // console.log(\"Uppercase was Clicked \" + Text);\r\n        let newText = \"\";\r\n        setText(newText);\r\n        props.showAlert(\"Cleared text\",\"success\");\r\n    }\r\n    const handleevent=(event)=>{\r\n        // console.log(\"Change On\");\r\n        setText(event.target.value);\r\n    }\r\n    const handleCopyClick=()=>{\r\n        var text = document.getElementById(\"Textarea\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Text copied\",\"success\");\r\n    }\r\n    const handleSpacesClick=()=>{\r\n        let newText = Text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Spaces are removed\",\"success\");\r\n    }\r\n    const [Text,setText]=useState(\"\");\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <h1 style={{color:props.mode==='light'?'black':'white'}}>{props.heading}</h1>\r\n                <div className=\"mb-3\">\r\n                    <textarea className=\"form-control\" value={Text} style={{backgroundColor:props.mode==='dark'?'grey':'white',color:props.mode==='light'?'black':'white'}} onChange={handleevent} id=\"Textarea\" rows=\"10\"></textarea>\r\n                    <button className=\"btn btn-primary mx-1 my-2\" onClick={handleUpClick} >Convert to Uppercase</button>\r\n                    <button className=\"btn btn-primary mx-1 my-2\" onClick={handleLoClick} >Convert to Lowercase</button>\r\n                    <button className=\"btn btn-primary mx-1 my-2\" onClick={handleClearClick} >Clear</button>\r\n                    <button className=\"btn btn-primary mx-1 my-2\" onClick={handleCopyClick} >Copy text</button>\r\n                    <button className=\"btn btn-primary mx-1 my-2\" onClick={handleSpacesClick} >Remove Extra Spaces</button>\r\n                </div>  \r\n            </div>\r\n            <div className=\"container my-3\" style={{color:props.mode==='light'?'black':'white'}}>\r\n                <h2>Your Text Summary</h2>\r\n                <p>{Text.split(\" \").length-1} and {Text.length}</p>\r\n                <p>{0.008*Text.split(\" \").length} Minutes to read</p>\r\n            </div>\r\n            <div className=\"container\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n                <h2>Preview</h2>\r\n                <p>{Text}</p>\r\n            </div>\r\n        </>\r\n        \r\n\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize=(word)=>{\r\n        let lower= word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n            props.alert && <div class={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n                {/* <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n            </div>\r\n    )\r\n}\r\n","// import logo from './logo.svg';\n// import './App.css';\n// import Abouts from './component/Abouts';\n\n// import Greet from './component/Greet'\n// import Welcome from './component/Welcome'\n// import Hello from './component/Hello'\n// import Message from './component/Message'\n// import Counter from './component/Counter';\nimport Navbar from './component/Navbar';\nimport TextForm from './component/TextForm';\nimport React,{useState} from 'react';\nimport Alert from './component/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode,setmode] = useState(\"light\");\n\n  const [alert,setalert]=useState(null);\n\n  const showAlert=(message,type)=>{\n    setalert({\n      msg:message,\n      type:type\n    })\n    setTimeout(() => {\n      setalert(null);\n    }, 1000);\n  }\n\n  const toggleMode=()=>{\n    if(mode===\"light\"){\n      setmode(\"dark\");\n      document.body.style.backgroundColor=\"#101138\";\n      showAlert(\"Dark Mode is Open. \",\"success\");\n    }\n    else{\n      setmode(\"light\");\n      document.body.style.backgroundColor=\"white\";\n      showAlert(\"Light Mode is Open. \",\"success\");\n    }\n  }\n  return (\n    // <div classNameName=\"App\">\n    //   {/* <Message /> */}\n    //   <Counter addvalue= '1'/>\n    //  {/* <Greet  name='shivmesh' rollno='95'><p>this is my first product</p></Greet>\n    //  <Welcome name='Shivmesh' sex='male'/> */}\n    //  {/* <Hello /> */}\n    // </div>\n    <>\n    {/* <Router> */}\n    <Navbar title={\"TextUtils\"} mode={mode} toggleMode={toggleMode}/>\n    <Alert alert={alert}/>\n    {/* <TextForm heading={\"Enter the text here\"} mode={mode}  toggleMode={toggleMode} showAlert={showAlert}/>  */}\n    {/* <Abouts/> */}\n    {/* <Switch>\n          <Route exact path=\"/about\">\n            <Abouts />\n          </Route>\n          <Route exact path=\"/\"> */}\n            <TextForm heading={\"Enter the text here\"} mode={mode}  toggleMode={toggleMode} showAlert={showAlert}/> \n          {/* </Route>\n        </Switch>\n        </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\n// import Navbar from './component/Navbar';\n// import TextForm from './component/TextForm';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// // reportWebVitals();\n// const curdate = new Date().toLocaleDateString();\n// const curtime = new Date().toLocaleTimeString();\n\n// ReactDOM.render(\n//   <React.Fragment>\n//     <h1>Hi My name is Shivmesh and Date is {curdate}</h1>\n//     <p>This is my first web site and Time is {curtime}</p>\n//   </React.Fragment>,\n//   document.getElementById(\"root\"));"],"sourceRoot":""}